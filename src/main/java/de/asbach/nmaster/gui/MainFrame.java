/*
 * MainFrame.java
 *
 * Created on 23. August 2008, 02:16
 */

package de.asbach.nmaster.gui;

import de.asbach.nmaster.gui.AboutFrame;
import de.asbach.nmaster.gui.ComponentCenterer;
import de.asbach.nmaster.gui.SemesterAddDialog;
import de.asbach.nmaster.core.GradeCalculator;
import de.asbach.nmaster.core.GrademasterProperties;
import de.asbach.nmaster.core.NewVersionListener;
import de.asbach.nmaster.core.SemesterLoader;
import de.asbach.nmaster.core.Version;
import de.asbach.nmaster.core.VersionNotFoundException;
import de.asbach.nmaster.gui.components.AddTabListener;
import de.asbach.nmaster.gui.components.AddTabPanel;
import de.asbach.nmaster.gui.components.JImagePanel;
import de.asbach.nmaster.gui.components.RefreshGradeListener;
import de.asbach.nmaster.gui.components.SemesterTabbedPane;
import de.asbach.nmaster.gui.components.SemesterPanel;
import de.asbach.nmaster.model.Semester;
import java.awt.Component;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.jdom.JDOMException;

/**
 *
 * @author Benjamin Asbach <benjamin.asbach at gmail.com>
 */
public class MainFrame extends javax.swing.JFrame implements AddTabListener, RefreshGradeListener, NewVersionListener{
    private List<Semester> semesterList;
    
    /** Creates new form MainFrame */
    public MainFrame() {
        initComponents();
        try {
            setTitle("grademasterflash " + Version.getInstance().getVersion());
        } catch (VersionNotFoundException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            semesterList = SemesterLoader.load(new File(System.getProperty("user.home") + File.separator + ".grademasterflash" + File.separator + "last.obj"));
            buildTabbedPane();
            
            doRefresh();
        } catch (IOException ex) {
            semesterList = new ArrayList<Semester>();
        } catch (ClassNotFoundException ex) {
            semesterList = new ArrayList<Semester>();
        }
        tpnlSemesters.setSelectedIndex(0);
        
        ComponentCenterer.centerComponent(this);
        
        Version.getInstance().addNewVersionListener(this);
        Version.getInstance().checkForNewVersion();
    }
    
    public void buildTabbedPane(){
        tpnlSemesters.removeAll();
        
        for(Semester s : semesterList){
            SemesterPanel sp = new SemesterPanel(s);
            sp.addRefreshGradeListener(this);
            tpnlSemesters.insertTab(s.getSemesterAlias(), null, sp, s.getSemesterAlias(), tpnlSemesters.getTabCount() - 1);
        }
        tpnlSemesters.setSelectedIndex(0);
        
        doRefresh();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpnlSemesters = (javax.swing.JTabbedPane) new SemesterTabbedPane();
        ((SemesterTabbedPane)tpnlSemesters).addTabListener(this);
        lblsTotalGrade = new javax.swing.JLabel();
        lblTotalGrade = new javax.swing.JLabel();
        pnlDeleteSemester = (javax.swing.JPanel) new JImagePanel(new ImageIcon(Thread.currentThread().getContextClassLoader().getResource("images/cross.png")));
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuGrade = new javax.swing.JMenu();
        mnuiLoadGrade = new javax.swing.JMenuItem();
        mnuiSaveGrade = new javax.swing.JMenuItem();
        mnuTemplate = new javax.swing.JMenu();
        mnuiLoadTemplate = new javax.swing.JMenuItem();
        mnuSaveAsTemplate = new javax.swing.JMenuItem();
        mnuOptions = new javax.swing.JMenu();
        mnuiChangeOptions = new javax.swing.JMenuItem();
        mnuInfo = new javax.swing.JMenu();
        mnuiWebsite = new javax.swing.JMenuItem();
        mnuiItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(new ImageIcon(Thread.currentThread().getContextClassLoader().getResource("images/calculator.png")).getImage());
        setMinimumSize(new java.awt.Dimension(525, 450));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lblsTotalGrade.setFont(new java.awt.Font("Tahoma", 0, 14));
        lblsTotalGrade.setText("Dein Durchschnitt:");

        lblTotalGrade.setFont(new java.awt.Font("Tahoma", 1, 14));
        lblTotalGrade.setText("<Zu wenig Informationen>");

        pnlDeleteSemester.setToolTipText("Semester entfernen!");
        pnlDeleteSemester.setPreferredSize(new java.awt.Dimension(16, 16));
        pnlDeleteSemester.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlDeleteSemesterMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlDeleteSemesterLayout = new javax.swing.GroupLayout(pnlDeleteSemester);
        pnlDeleteSemester.setLayout(pnlDeleteSemesterLayout);
        pnlDeleteSemesterLayout.setHorizontalGroup(
            pnlDeleteSemesterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );
        pnlDeleteSemesterLayout.setVerticalGroup(
            pnlDeleteSemesterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );

        mnuGrade.setLabel("Ergebnis");
        mnuGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuGradeActionPerformed(evt);
            }
        });

        mnuiLoadGrade.setText("Ergebnis laden");
        mnuiLoadGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiLoadGradeActionPerformed(evt);
            }
        });
        mnuGrade.add(mnuiLoadGrade);

        mnuiSaveGrade.setText("Ergebnis speichern");
        mnuiSaveGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiSaveGradeActionPerformed(evt);
            }
        });
        mnuGrade.add(mnuiSaveGrade);

        jMenuBar1.add(mnuGrade);

        mnuTemplate.setLabel("Template");

        mnuiLoadTemplate.setText("Template laden");
        mnuiLoadTemplate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiLoadTemplateActionPerformed(evt);
            }
        });
        mnuTemplate.add(mnuiLoadTemplate);

        mnuSaveAsTemplate.setText("Als Template speichern");
        mnuSaveAsTemplate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSaveAsTemplateActionPerformed(evt);
            }
        });
        mnuTemplate.add(mnuSaveAsTemplate);

        jMenuBar1.add(mnuTemplate);

        mnuOptions.setText("Optionen");
        mnuOptions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuOptionsActionPerformed(evt);
            }
        });

        mnuiChangeOptions.setText("Ã„ndern");
        mnuiChangeOptions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiChangeOptionsActionPerformed(evt);
            }
        });
        mnuOptions.add(mnuiChangeOptions);

        jMenuBar1.add(mnuOptions);

        mnuInfo.setText("Info");
        mnuInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuInfoActionPerformed(evt);
            }
        });

        mnuiWebsite.setText("Website");
        mnuiWebsite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiWebsiteActionPerformed(evt);
            }
        });
        mnuInfo.add(mnuiWebsite);

        mnuiItem.setText("About");
        mnuiItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuiItemActionPerformed(evt);
            }
        });
        mnuInfo.add(mnuiItem);

        jMenuBar1.add(mnuInfo);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tpnlSemesters, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblsTotalGrade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTotalGrade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 178, Short.MAX_VALUE)
                        .addComponent(pnlDeleteSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tpnlSemesters, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblsTotalGrade)
                        .addComponent(lblTotalGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlDeleteSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            SemesterLoader.save(new File(System.getProperty("user.home") + File.separator + ".grademasterflash" + File.separator + "last.obj"), semesterList);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "IOException beim Speichern deiner Einstellungen!", "Fehler beim Speichern!", JOptionPane.ERROR_MESSAGE);
        }
}//GEN-LAST:event_formWindowClosing

private void pnlDeleteSemesterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlDeleteSemesterMouseClicked
    Component c = tpnlSemesters.getSelectedComponent();
    if(!(c instanceof AddTabPanel)){
        if(JOptionPane.showConfirmDialog(this, "Willst du wirklich alle Daten des Semesters lÃ¶schen?", "LÃ¶schbestÃ¤tigung", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == JOptionPane.YES_OPTION){
            semesterList.remove(((SemesterPanel)c).getSemester());
            tpnlSemesters.remove(c);
            tpnlSemesters.setSelectedIndex(0);
        }
    }
    
    doRefresh();
}//GEN-LAST:event_pnlDeleteSemesterMouseClicked

private void mnuGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuGradeActionPerformed
}//GEN-LAST:event_mnuGradeActionPerformed

private void mnuiSaveGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiSaveGradeActionPerformed
    JFileChooser jfc = new JFileChooser();
    jfc.setFileFilter(new FileNameExtensionFilter("grademasteflash Datei", "gmf"));
    
    if(jfc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION){
        File f = jfc.getSelectedFile();
        if(!f.getName().endsWith(".gmf"))
            f = new File(f.getAbsolutePath() + ".gmf");
        try {
            SemesterLoader.save(f, semesterList);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Fehler beim Speichern! Es trat eine IOException auf!", "Fehler beim Speichern.", JOptionPane.ERROR_MESSAGE);
        }
    }
}//GEN-LAST:event_mnuiSaveGradeActionPerformed

private void mnuiLoadTemplateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiLoadTemplateActionPerformed
    int result = JOptionPane.showConfirmDialog(  this, 
                                    "Wenn die ein Template lÃ¤dst, gehen alles bisher eingetragenen Daten verloren!\nWillst du wirklich fortfahren?", 
                                    "Fortfahren", 
                                    JOptionPane.YES_NO_OPTION);
    
    if(result == JOptionPane.YES_OPTION){    
        JFileChooser jfc = new JFileChooser();
        jfc.setFileFilter(new FileNameExtensionFilter("xml Datei", "xml"));

        if(jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){           
                try {
                    List<Semester> list = SemesterLoader.loadTemplate(jfc.getSelectedFile());
                    if(list != null || list.size() != 0){
                        semesterList = list;
                        buildTabbedPane();
                    }
                } catch (JDOMException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
    }
}//GEN-LAST:event_mnuiLoadTemplateActionPerformed

private void mnuSaveAsTemplateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSaveAsTemplateActionPerformed
    JFileChooser jfc = new JFileChooser();
    jfc.setFileFilter(new FileNameExtensionFilter("xml Datei", "xml"));
    
    if(jfc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION){
        File f = jfc.getSelectedFile();
        if(!f.getName().endsWith(".xml"))
            f = new File(f.getAbsolutePath() + ".xml");
        try {
            SemesterLoader.saveAsTemplate(f, semesterList);
        } catch (JDOMException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}//GEN-LAST:event_mnuSaveAsTemplateActionPerformed

private void mnuiLoadGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiLoadGradeActionPerformed
    JFileChooser jfc = new JFileChooser();
    jfc.setFileFilter(new FileNameExtensionFilter("grademasteflash Datei", "gmf"));
    
    if(jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            try {
                List<Semester> list = SemesterLoader.load(jfc.getSelectedFile());
                if(list != null || list.size() != 0){
                    semesterList = list;
                    buildTabbedPane();
                }
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Fehler beim Laden! Es trat eine IOException auf!", "Fehler beim Laden.", JOptionPane.ERROR_MESSAGE);
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Fehler beim Laden! Die gespeicherte Datei ist beschÃ¤digt!", "Fehler beim Laden.", JOptionPane.ERROR_MESSAGE);
            }
    }
}//GEN-LAST:event_mnuiLoadGradeActionPerformed

private void mnuInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuInfoActionPerformed
    new AboutFrame(this, true).setVisible(true);
}//GEN-LAST:event_mnuInfoActionPerformed

private void mnuiItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiItemActionPerformed
    new AboutFrame(this, true).setVisible(true);
}//GEN-LAST:event_mnuiItemActionPerformed

private void mnuiWebsiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiWebsiteActionPerformed
        try {
            Desktop.getDesktop().browse(new URI("http://foo.bluebug.de/grademasterflash/"));
        } catch (URISyntaxException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
};//GEN-LAST:event_mnuiWebsiteActionPerformed

private void mnuOptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuOptionsActionPerformed
    
}//GEN-LAST:event_mnuOptionsActionPerformed

private void mnuiChangeOptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuiChangeOptionsActionPerformed
    System.out.println("");
    new OptionsDialog(null, true).setVisible(true);

    doRefresh();
    for ( Component c : tpnlSemesters.getComponents() ) {
        if ( c instanceof SemesterPanel ) {
            ((SemesterPanel)c).doRefresh();
        }
    }
}//GEN-LAST:event_mnuiChangeOptionsActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel lblTotalGrade;
    private javax.swing.JLabel lblsTotalGrade;
    private javax.swing.JMenu mnuGrade;
    private javax.swing.JMenu mnuInfo;
    private javax.swing.JMenu mnuOptions;
    private javax.swing.JMenuItem mnuSaveAsTemplate;
    private javax.swing.JMenu mnuTemplate;
    private javax.swing.JMenuItem mnuiChangeOptions;
    private javax.swing.JMenuItem mnuiItem;
    private javax.swing.JMenuItem mnuiLoadGrade;
    private javax.swing.JMenuItem mnuiLoadTemplate;
    private javax.swing.JMenuItem mnuiSaveGrade;
    private javax.swing.JMenuItem mnuiWebsite;
    private javax.swing.JPanel pnlDeleteSemester;
    private javax.swing.JTabbedPane tpnlSemesters;
    // End of variables declaration//GEN-END:variables

    @Override
    public void addTab() {
        SemesterAddDialog sDialog = new SemesterAddDialog(this, true);
        sDialog.setVisible(true);
        Semester result = sDialog.getResult();
        if(result != null){
            semesterList.add(result);
            SemesterPanel sp = new SemesterPanel(result);
            sp.addRefreshGradeListener(this);
            tpnlSemesters.insertTab(result.getSemesterAlias(), null, sp, result.getSemesterAlias(), tpnlSemesters.getTabCount() - 1);
            tpnlSemesters.setSelectedIndex(tpnlSemesters.getTabCount() - 2);
        } else {
            tpnlSemesters.setSelectedIndex(tpnlSemesters.getTabCount() - 1);
        }
    }

    @Override
    public void doRefresh() {
        double d = GradeCalculator.calculateTotalGradeBySemesters(semesterList);
        final GrademasterProperties p = GrademasterProperties.getInstance();
        
        String format = "0.0";
        double multiplicator = 10.0;
        if ( p.get("precission") != null ) {
            StringBuffer sb = new StringBuffer("0.");
            for( int i = 0; i < Integer.valueOf(p.getProperty("precission")); i++ ) {
                sb.append("0");
            }
            format = sb.toString();
            
            multiplicator = Math.pow(10, Integer.valueOf(p.getProperty("precission")));
        }
        
        if(d != 0){
            d = Math.round(d * multiplicator) / multiplicator;
            DecimalFormat df = new DecimalFormat(format);
            lblTotalGrade.setText(df.format(d));
        }else
            lblTotalGrade.setText("<Zu wenig Informationen>");
    }

    @Override
    public void newVersionAvaible(String newVersion) {
        JOptionPane.showMessageDialog(this, "Die neue Version " + newVersion + " ist verfÃ¼gbar!", "Neue Version!", JOptionPane.INFORMATION_MESSAGE);
        try {
            Desktop.getDesktop().browse(new URI("http://foo.bluebug.de/grademasterflash/"));
        } catch (URISyntaxException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}